---
- name: Déployer et configurer GLPI
  hosts: web
  become: yes
  vars_files:
    - vault.yaml

  tasks:
    - name: Installer les paquets requis
      apt:
        name:
          - apache2
          - php
          - php8.2-fpm
          - mariadb-server
          - mariadb-client
          - python3-pymysql
          - php-xml
          - php-common
          - php-json
          - php-mysql
          - php-mbstring
          - php-curl
          - php-gd
          - php-intl
          - php-zip
          - php-bz2
          - php-imap
          - php-apcu
          - php-ldap
        state: present
        update_cache: yes

    - name: Vérifier si MariaDB utilise unix_socket
      ansible.builtin.command: "mysql -u root -e \"SELECT plugin FROM mysql.user WHERE User='root';\""
      register: mariadb_auth
      changed_when: false
      failed_when: mariadb_auth.rc != 0 and 'Access denied' not in mariadb_auth.stderr

    - name: Désactiver unix_socket pour root si activé
      ansible.builtin.command: "mysql -u root --socket=/run/mysqld/mysqld.sock -e 'ALTER USER \"root\"@\"localhost\" IDENTIFIED WITH mysql_native_password BY \"{{ db_root_password }}\";'"
      when: "'unix_socket' in mariadb_auth.stdout"
      ignore_errors: yes

    - name: Redémarrer MariaDB
      ansible.builtin.systemd:
        name: mariadb
        state: restarted

    - name: Définir le mot de passe root de MariaDB
      community.mysql.mysql_user:
        name: root
        password: "{{ db_root_password }}"
        login_unix_socket: /run/mysqld/mysqld.sock
        column_case_sensitive: true
        state: present

    - name: Vérifier la connexion root MySQL
      community.mysql.mysql_query:
        login_user: root
        login_password: "{{ db_root_password }}"
        query: "SELECT 1;"


    - name: Créer la base de données GLPI
      community.mysql.mysql_db:
        name: "{{ db_glpi_name }}"
        state: present
        login_user: root
        login_password: "{{ db_root_password }}"

    - name: Créer l’utilisateur GLPI
      community.mysql.mysql_user:
        name: "{{ db_glpi_user }}"
        password: "{{ db_glpi_password }}"
        priv: "{{ db_glpi_name }}.*:ALL"
        host: localhost
        state: present
        login_user: root
        login_password: "{{ db_root_password }}"
        column_case_sensitive: false

    - name: Télécharger GLPI
      get_url:
        url: "https://github.com/glpi-project/glpi/releases/download/10.0.10/glpi-10.0.10.tgz"
        dest: "/tmp/glpi.tgz"

    - name: Extraire GLPI dans /var/www/html
      ansible.builtin.unarchive:
        src: "/tmp/glpi.tgz"
        dest: "/var/www/html/"
        remote_src: yes

    - name: Définir les permissions sur GLPI (récursif)
      ansible.builtin.file:
        path: "/var/www/html/glpi/"
        owner: www-data
        group: www-data
        mode: "0755"
        state: directory
        recurse: yes

    - name: Vérifier si /etc/glpi/config existe déjà
      ansible.builtin.stat:
        path: "/etc/glpi/config"
      register: config_dir

    - name: Déplacer la configuration de GLPI
      ansible.builtin.command: mv /var/www/html/glpi/config /etc/glpi
      when: not config_dir.stat.exists
